# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build_and_push:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Check out repository
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.9

#     - name: Install AWS CLI
#       run: |
#         curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#         unzip awscliv2.zip
#         sudo ./aws/install --update

#     - name: Configure AWS CLI
#       run: |
#         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws configure set default.region us-east-1

#     - name: Login to Amazon ECR
#       run: |
#         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 000065695109.dkr.ecr.us-east-1.amazonaws.com

#     - name: Build and push Docker image
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         push: true
#         tags: 000065695109.dkr.ecr.us-east-1.amazonaws.com/inversekinematics:v1

#   deploy:
#     needs: build_and_push
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.9

#     - name: Install AWS CLI
#       run: |
#         curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#         unzip awscliv2.zip
#         sudo ./aws/install --update

#     - name: Configure AWS CLI
#       run: |
#         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws configure set default.region us-east-1

#     - name: Update Kubeconfig for EKS cluster
#       run: |
#         aws eks update-kubeconfig --region us-east-1 --name inversekinematics-cluster

#     - name: Deploy to EKS
#       run: |
#         kubectl apply -f k8s/deployment.yaml
#         kubectl apply -f k8s/service.yaml
#         kubectl rollout status deployment/flask-app

name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_SDK_LOAD_CONFIG: 1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/inversekinematics:${{ github.sha }}

    - name: Configure AWS CLI
      run: |
        echo ${{ secrets.AWS_ACCESS_KEY_ID }} | aws configure set aws_access_key_id
        echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} | aws configure set aws_secret_access_key
        echo ${{ secrets.AWS_REGION }} | aws configure set default.region

    - name: Update Kubernetes config
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name inversekinematics-cluster

    - name: Deploy to Amazon EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/flask-app
